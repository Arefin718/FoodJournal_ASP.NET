@model DataLayer.Class.Offer

@{
    ViewBag.Title = "NewOffer";
    Layout = "~/Views/Shared/headerAndFooter.cshtml";
}

<div class="container">

    <div class="row">
        <div class="col-md-12 text-center">
            <h1 class="bg-info text-white">Post Offer</h1>
        </div>
    </div> 

 @using (Html.BeginForm("NewOffer", "offer", FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
             <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @*<div class="form-group">
                    @Html.LabelFor(model => model.RestaurantId, "RestaurantId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("RestaurantId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RestaurantId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <input type="hidden" value="@Convert.ToInt32(ViewData["RestaurantId"])" name="RestaurantId" />

            <div class="form-group">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", required = "required", type="file"} })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OfferDescription, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OfferDescription, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                    @Html.ValidationMessageFor(model => model.OfferDescription, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                @Html.LabelFor(model => model.OfferValidity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="ui-widget">
                        <input type="text" class="form-control" name="OfferValidity" id="datepicker" required="required">
                    </div>
                </div>
            </div>


       

            <div class="form-group">
                <div class="col-md-offset-6 col-md-2">
                    <input type="submit" value="Post" class="btn btn-default" />
                </div>
            </div>

        </div>
    }


</div>



@section scripts{
<script>
    $(function () {

      $("#datepicker").datepicker({
          minDate: 0
      });

     });
</script>
    }